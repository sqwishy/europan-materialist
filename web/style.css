@import "palette.css";

@import url('https://fonts.googleapis.com/css2?family=Exo+2:ital@0;1&display=swap');

:root
      { --panel: var(--gb72);
        --input: var(--gb72);
      --outline: var(--gb60);
         --page: var(--gb84);
         --text: var(--gb12);
      --station: var(--gb-yellow00);
     --consumed: var(--gb-orange49);
     --produced: var(--gb-green49); }

/* :root */
/*   { --panel: var(--baro72); */
/*     --input: var(--baro72); */
/*   --outline: var(--baro60); */
/*      --page: var(--baro60); */
/*      --text: var(--baro00); */
/*      --consumed: var(--b-rd50); */
/*      --produced: var(--b-bl50); } */

body
  { font: medium/1.5 'Exo 2', 'IBM Plex Sans', sans-serif;
    background-color: var(--page);
    color:            var(--text);
    margin: 0 }

a, input, button, textarea, select
  { background:  transparent;
    color:       inherit;
    font:        inherit;
    text-align:  inherit;
    text-shadow: inherit }

button, textarea, input, select
  { background-color: var(--input);
    border:           1px solid var(--outline);
    border-radius:    4px; }

input, select
  { padding:    0.3ch 0.7ch;
    box-sizing: content-box; }

button          { cursor: pointer; }
button:disabled { cursor: not-allowed }

p,
.process
  { max-width: 44ch;
    margin:    2ch 1ch }

.process span
  { padding:       0.3ch 0.7ch;
    overflow:      hidden;
    text-overflow: ellipsis;
    white-space:   nowrap }

.item { display: flex }

.item .amount
  { flex: 0 0 3ch; text-align: right }
.item .station,
.item .what
  { flex-grow: 1 }

/* .process > span */
/*   { background-color: var(--panel); */
/*     border:           1px solid var(--outline); */
/*     border-radius:    4px; */
/*     font-size:        smaller; */

/*     display:   inline-flex; */
/*     grid-gap:  1ch; */
/*     flex-wrap: wrap } */

.random + .part-list
  { margin-left: 1ch }
.random .what
  { font-style: italic }

/* .framed */
/*        { --shadow: var(--gb60); */
/*     --shadow-soft: var(--gb72); */
/*          --border: var(--gb96); } */

.part, .item
  { background-color: var(--panel);
    /* border: 1px solid var(--gb60); */
    /* box-shadow: 1px 1px var(--gb96); */
    /* border-radius: 4px; */
    /* margin: .2ch 0; */
  }

/* .part > .framed + .framed */
/*   { border-left: 4px dotted var(--gb60) } */

/* .framed */
/*   { border: 1px solid var(--shadow); */
/*     box-shadow: inset  1px  1px var(--border), */
/*                 inset -1px -1px var(--border) } */
/* /1* hide/merge neighbouring borders *1/ */
/* .framed + .framed { border-left: 0 } */
/* .part + .part .framed { border-top: 0 } */

/* .part.consumed .amount */
/*   { --border: var(--gb-orange98); */
/*     --shadow: var(--gb-orange00); */
/*     --shadow-soft: var(--gb-orange49); } */
/* .part.produced .amount */
/*   { --border: var(--gb-green98); */
/*     --shadow: var(--gb-green00); */
/*     --shadow-soft: var(--gb-green49); } */
/* .part.consumed .amount */
/*   { background: var(--gb-orange49); */
/*     color:      var(--gb96); } */
/* .part.produced .amount */
/*   { background: var(--gb-green49); */
/*     color:      var(--gb96); } */

.item
  {     border: 0 solid var(--outline);
  border-width: 0 1px 0 1px }
.item:first-of-type
  {    border-top-width: 1px }
.item:last-of-type
  { border-bottom-width: 1px }

.item.stations
  { background-color: var(--station);
    color: var(--gb96);
    border: 1px solid var(--gb48);
    box-shadow: inset  1px  1px var(--gb-yellow49),
                inset -1px -1px var(--gb-yellow49)
  }

.item .decoration
  { box-sizing: border-box; width: 24px; margin-left: 8px }

/* mask-image not well supported by wekbit browsers lmao */
.item .decoration
  {          mask-repeat: no-repeat;
    --webkit-mask-repeat: no-repeat;
             mask-size:   cover;
    --webkit-mask-size:   cover;
             mask-position: center;
    --webkit-mask-position: center }
/* stripe repeating */
.item.consumed .decoration,
.item.produced .decoration
  /* {          mask-image: url('data:image/svg+xml,<svg width="64" height="64" version="1.1" viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg"><path d="m0 0v16l32 18 32-18v-16z"/><path d="m0 34v30h64v-30l-32 18z"/></svg>'); */
  /*   --webkit-mask-image: url('data:image/svg+xml,<svg width="64" height="64" version="1.1" viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg"><path d="m0 0v16l32 18 32-18v-16z"/><path d="m0 34v30h64v-30l-32 18z"/></svg>') } */
  { clip-path: polygon(0  0%, 100%   0, 100% 40%,  50%  60%, 0  40%,
                       0 70%,  50% 90%, 100% 70%, 100% 100%, 0 100%) }
/* stripe end */
.item.produced:last-of-type .decoration
/*   {          mask-image: url('data:image/svg+xml,<svg width="64" height="64" version="1.1" viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg"><path d="m0 0v22l32 18 32-18v-22z"/></svg>'); */
/*     --webkit-mask-image: url('data:image/svg+xml,<svg width="64" height="64" version="1.1" viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg"><path d="m0 0v22l32 18 32-18v-22z"/></svg>') } */
  { clip-path: polygon(0  0%, 100%   0, 100% 40%,  50%  60%, 0  40%) }

/* .item .decoration { margin-top: -1px; } */
/* .item          .decoration */
/*   { background-color: var(--fab) } */
.item.consumed .decoration
  { background-color: var(--consumed) }
.item.produced .decoration
  { background-color: var(--produced) }

.item .amount.amount-multiple::after
  { content: 'Ã—'; line-height: 0 }

.item .condition
  { flex-shrink: 0 }

/* this feels really dirty; alternatively, generate a css file with a css class
 * per sprite that uses background-image */
.item .sprite
  { position: relative; flex-basis: 48px }
.item .sprite img
  { position: absolute; margin: auto;
    top: 0; right: 0; bottom: 0; left: 0;
    max-height: 100%; max-width: 100% }
