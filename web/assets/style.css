@import "palette.css";
@import "fonts.css";

:root
  {  --item: var(--solar84);
    --input: var(--solar84);
  --outline: var(--solar60);
 --linkline: var(--solar60);
   --shadow: var(--solar48);
     --page: var(--solar72);
     --text: var(--solar00);
    --muted: var(--solar24);
 --consumed: var(--solar-red50);
 --produced: var(--solar-cyan50);
      --mod: #6767e0;
        --station-item: var(--solar24);
     --station-outline: var(--solar12);
        --station-text: var(--solar96);
 --station-text-shadow: var(--solar00);
       --station-muted: var(--solar84);
       --station-light: var(--solar36);
        --chevron-open: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3E%3Cpath d='M 1 1 l 1 1 l 1 -1' stroke='%23002b36' stroke-width='0.5' fill='none'/%3E%3C/svg%3E");
      --chevron-active: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3E%3Cpath d='M 3 1 l -1 1 l 1 1' stroke='%236767e0' stroke-width='0.5' fill='none'/%3E%3C/svg%3E");
       --chevron-hover: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3E%3Cpath d='M 3 1 l -1 1 l 1 1' stroke='%23002b36' stroke-width='0.5' fill='none'/%3E%3C/svg%3E");
     }

@media (prefers-color-scheme: dark) {
:root
  {  --item: var(--ayu24);
    --input: var(--ayu24);
  --outline: var(--ayu36);
 --linkline: var(--ayu36);
   --shadow: var(--ayu00);
     --page: var(--ayu12);
     --text: var(--ayu96);
    --muted: var(--ayu72);
 --consumed: #f07171;
 --produced: #4cbf99;
      --mod: #d2a6ff;
        --station-item: var(--ayu36);
     --station-outline: var(--ayu24);
        --station-text: var(--ayu96);
 --station-text-shadow: var(--ayu12);
       --station-muted: var(--ayu84);
       --station-light: var(--ayu48);
        --chevron-open: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3E%3Cpath d='M 1 1 l 1 1 l 1 -1' stroke='%23f8f9fa' stroke-width='0.5' fill='none'/%3E%3C/svg%3E");
      --chevron-active: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3E%3Cpath d='M 3 1 l -1 1 l 1 1' stroke='%23d2a6ff' stroke-width='0.5' fill='none'/%3E%3C/svg%3E");
       --chevron-hover: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3E%3Cpath d='M 3 1 l -1 1 l 1 1' stroke='%23f8f9fa' stroke-width='0.5' fill='none'/%3E%3C/svg%3E");
   } }

body
  { font: 1rem/1.1 sans-serif;
    background-color: var(--page);
               color: var(--text);
              margin: 0 }

.loading-screen, .item, .entity, .results-length, .ctl, .surrogate
  { font-family: 'Exo 2', sans-serif }

.loading-screen
           { margin: 3ch auto;
          font-size: large;
  font-variant-caps: small-caps;
          max-width: 20ch }

hr { border: 0; height: 0; border-bottom: 1px solid var(--outline); }

header > p,
header > div,
main > p,
main > div,
section > p,
section > div,
footer > p,
footer > div
  { margin: 10px; max-width: 500px; box-sizing: border-box }


.muted { color: var(--muted) }


a, input, button, select
  { background:  transparent;
    color:       inherit;
    font:        inherit;
    text-align:  inherit;
    text-shadow: inherit;
    line-height: normal }


button, input[type=text], select, details.select-bundle
  { padding:    6px 9px;
    box-sizing: content-box;
    background-color: var(--input);
    border:           1px solid var(--outline);
    box-shadow:  2px  2px var(--shadow),
                -1px -1px var(--shadow); }


button          { cursor: pointer; }
button:disabled { cursor: not-allowed }

p > button { margin-left: 1ch }

details.select-bundle > a.active {}

details.select-bundle > summary,
details.select-bundle > .loadable-bundle a
  { padding-right: 3ch; display: block }
details.select-bundle > summary
  { background: no-repeat center right 6px / 2ch var(--chevron-open) }
details.select-bundle > .loadable-bundle a:hover
  { background: no-repeat center right 6px / 2ch var(--chevron-hover) }
details.select-bundle > .loadable-bundle a.active:not(:hover)
  { background: no-repeat center right 6px / 2ch var(--chevron-active) ; }


details.select-bundle
  { padding: 0 }
details.select-bundle ol.load-order
  { padding: 6px 9px }
details.select-bundle > summary
  { list-style: none }
details.select-bundle[open] > summary
  { border-bottom: 1px solid var(--outline) }

ol.load-order li
  { display: inline }
ol.load-order li:not(:first-child)::before
   { content: ' & ';
  font-style: italic;
       color: var(--muted);
   font-size: 80% }


input[inputmode=decimal] { text-align: right }

ol, ul { list-style: none; margin: 0; padding: 0 }


/* positioning */

.results-length { display: flex; align-items: center }
.results-length > *:first-child { flex-grow: 1 }


a:not(.wiki-link):not(.identifier):not(.mod)
  { text-decoration-thickness: 4px;
    text-decoration-color: var(--linkline) }

a.wiki-link:not(:hover),
a.identifier:not(:hover),
a.mod:not(:hover)
  { text-decoration: none }

.loadable-bundle a
  { text-decoration-skip-ink: none }


.process .needs-recipe
    { color: var(--muted);
    display: inline-block;
     margin: 0.5ch 1ch;
  font-size: 85% }

.item > span /* vertical padding here coupled with .sprite padding */
  { padding: 6px 9px }

.item > .time,
.item > .condition,
.item > .skill,
.item > .amount
  { overflow:      hidden;
    text-overflow: ellipsis;
    white-space:   nowrap }

.item > .skill
  {     color: var(--muted);
    font-size: 85% }

/* amount what    sprite */
/*   time station sprite */

.item
  { display: flex }

.item > *
  { flex: 0 0 min-content; align-self: baseline }

.item > .decoration
  { align-self: stretch;
    box-sizing: border-box;
       --inset:  8px;
       --width: 24px;
     min-width: var(--width);
     max-width: var(--width);
        margin: 0 var(--inset) }

/* stack decoration under amount text with negative margin */
.process .item > .decoration
  { margin-right: calc(0px - var(--width) - var(--inset)) }

.item > .decoration + *
  { z-index: 1 }

.item > .amount,
.item > .time
  { text-align: right; min-width: 6ch; max-width: 6ch }

.item > .station,
.item > .what
  { flex: 1 1 max-content }

.item > .taglist
  { flex-grow: 1 }

.item > .sprite
         { align-self: center;
           flex-basis: 48px;
  background-position: center;
      background-size: contain;
    background-repeat: no-repeat;
         padding-left: 0;
        padding-right: 0; }

.item.random + .random-list
  { margin-left: 1ch }


/* colors */

.item
  { background-color: var(--item);
               color: var(--text);
              border: 0 solid var(--outline);
        border-width: 0 1px 0 1px }

.item:first-of-type
  {    border-top-width: 1px }

.item:last-of-type
  { border-bottom-width: 1px }

.item.stations
  {          color: var(--station-text);
           --muted: var(--station-muted);
         --outline: var(--station-outline);
       text-shadow: 1px   1px var(--station-text-shadow);
  background-color: var(--station-item);
            border: 1px solid var(--station-light);
            border-top-color: var(--outline);
         border-bottom-color: var(--outline);
        box-shadow: inset 0px  1px var(--station-light),
                    inset 0px -1px var(--station-light) }

.item.stations + .item.stations
  { border-top: 0 }

.item > .amount.amount-multiple::after
  { content: '×'; line-height: 0 }

/* stripe repeating */
/*.item > */ .decoration
  { --pointyness: 4px; --gap: 8px; --from-bottom: 4px;
    --tail-vee:  calc(100% - var(--from-bottom));
    --tail-wing: calc(var(--tail-vee) - var(--pointyness));
    --head-vee:  calc(var(--tail-vee) - var(--gap));
    --head-wing: calc(var(--tail-wing) - var(--gap)) }

/* calc(100% + 1px) calc(0% - 1px) helps prevent a funny horizontal gap/line
 * between decorations, still shows up a lot on edge */
/*.item > */ .decoration
  { clip-path: polygon(0   calc(0% - 1px),  100%  calc(0% - 1px),  100% var(--head-wing),   50% var(--head-vee),   0 var(--head-wing),
                       0 var(--tail-wing),   50% var(--tail-vee),  100% var(--tail-wing),  100% calc(100% + 1px),  0 calc(100% + 1px)) }

/* stripe end */
.item.produced:last-of-type .decoration
  { clip-path: polygon(0  calc(0% - 1px),  100%   calc(0% - 1px),  100% var(--head-wing),  50% var(--head-vee),  0 var(--head-wing)) }


/*.item > */ .decoration
  { background-color: var(--outline);
    /* cute or cringe ??? */
    background-image: linear-gradient(to right, #ffffff00, #ffffff20 50%, #ffffff00 50%) }
@media (prefers-color-scheme: dark)
  { .decoration
    { background-image: linear-gradient(to right, #ffffff00, #ffffff10 50%, #ffffff00 50%) } }

.item.consumed > .decoration
  { background-color: var(--consumed) }

.item.produced > .decoration
  { background-color: var(--produced) }


.identifier, .mod
  { font: 80% 'IBM Plex Mono', monospace }

.identifier
  { color: var(--muted) }
.identifier::before { content: '{' }
.identifier::after  { content: '}' }

.mod
  { color: var(--mod) }
.mod::before { content: '«' }
.mod::after  { content: '»' }


.ctl
  { position: sticky;
      bottom: 10px;
     z-index: 1;
     display: flex }

.ctl { grid-gap: .5ch }

/* messes with the surrogate hack because buttons are taller than inputs for
 * some reason */
.ctl button { line-height: 0 }

.surrogate
  { display: none; visibility: hidden }

@media (pointer: fine)
  { .ctl[data-fixed]
      { position: fixed; width: 100%; bottom: unset; margin-top: 0 }
    .ctl[data-fixed] + .surrogate
      { display: block } }

.ctl > * { flex: 0 0 auto }
.ctl > .search { flex: 1 1 min-content; min-width: 0 }


.ctl .context-search
  { display: flex;
    padding: 0;
    width: 40px }


.ctl .context-search
  { position: relative }
.ctl .context-search > *
  { position: absolute;
    left: 0; top: 0;
    width: 100%; height: 100%;
    margin: 0; appearance: none;
    display: flex }


.ctl .context-search .decoration
  { width: 24px; margin: 0 8px; pointer-events: none }


.ctl .context-search > *
  { --reach: 70%;
    --floor: calc(100% + 1px) }
.ctl .context-search:not([data-current]) > .consumed
  { clip-path: polygon(0    0%,  var(--reach) 0%,  calc(100% - var(--reach)) var(--floor),     0 var(--floor)) }
.ctl .context-search:not([data-current]) > .produced
  { clip-path: polygon(100% 0%,  var(--reach) 0%,  calc(100% - var(--reach)) var(--floor),  100% var(--floor)) }

.ctl .context-search[data-current='only-consumed'] .produced
  { display: none }
.ctl .context-search[data-current='only-produced'] .consumed
  { display: none }

.ctl .context-search > .consumed > .decoration
  { background-color: var(--consumed) }
.ctl .context-search > .produced > .decoration
  { background-color: var(--produced) }
